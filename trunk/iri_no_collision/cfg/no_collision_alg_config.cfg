#! /usr/bin/env python
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the Willow Garage nor the names of its
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# Author: 

PACKAGE='iri_no_collision'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

#       Name                Type       Reconfiguration level  Description                            Default   Min   Max
gen.add("vT_max",           double_t,  0,                     "Maximum Translational Velocity",      0.6,      0.1,  1.5)
gen.add("vR_max",           double_t,  0,                     "Maximum Rotation Velocity",           1.0,      0.1,  2.0)
gen.add("r_acc",            double_t,  0,                     "Constant angular acceleration",       1.0,      0.1,  10.0)
gen.add("t_acc",            double_t,  0,                     "Constant linear acceleration",        0.5,      0.01, 1.0)
gen.add("min_safety_dist",  double_t,  0,                     "Minimum Safety Distance to Obstacle", 0.4,      0.2,  2.0)
gen.add("min_safety_angle", double_t,  0,                     "Minimum Safety Angle to Obstacle",    10.0,     0.0,  120.0)
gen.add("laser_safe_dist",  double_t,  0,                     "Laser Distance Free of Obstacles",    0.8,      0.5,  4.0)
gen.add("oa_cone_aperture", double_t,  0,                     "Cone Angle Free of Obstacles",        100.0,    90.0, 180.0)
gen.add("dist_tolerance"  , double_t,  0,                     "Maximum error on the goal distance",  0.01,     0.01, 0.1)
gen.add("angle_tolerance",  double_t,  0,                     "Maximum error on the goal angle",     0.1,      0.1,  0.5)
gen.add("max_angle2stop", double_t,  0, "Maximum angle to goal before to stoping platform and re-orienting",  60.0,    20.0, 180.0)

exit(gen.generate(PACKAGE, "NoCollisionAlgorithm", "NoCollision"))
